#%RAML 0.8
displayName: Products
get:
  description: Returns a list of products.
  securedBy: [products_read]
  is: [ locale, currency, paged, direction ]
  queryParameters:
    sort:
      description: Sort products by attribute.
      enum: [name, price]
      default: name
      example: name
      required : false
    q:
      description: Filter products by query string.
      required : false
    categoryId:
      description: Filter products by category ID.
      required : false
    id:
      description: The ID of the product.<br/>

        The query parameter is repeatable up to 12 times, e.g. "?id=productId1&id=productId2&id=productId3".<br/>
        The response will return the product data in the same order as the IDs.
        Invisible, deleted or unknown products are removed from the list.<br/>

        This parameter can only be used together with the locale and currency query parameters.
        Other query parameters, such as sort, categoryId, page etc, are not supported.
      required: false
      repeat: true
  responses:
    200:
      body:
        application/json:
          example: !include examples/get_product_response.json
          schema: !include schema/get_product.schema.json
/{productId}:
  displayName: Product
  uriParameters:
    productId:
      description: The unique identifier of the product.
      example: 52F221E0-36F6-DC4E-384A-AC1504050C04
  get:
    description: Returns information on a single product. For product variations, a link
      to the respective product variations resource (rel="variations") is added.
    securedBy: [products_read]
    is: [ locale, currency ]
    responses:
      200:
        body:
          application/json:
            example: !include examples/get_product_productid_response.json
            schema: !include schema/get_product_productid.schema.json
  patch:
    description: Updates information for a single product with partial data. You can either add or remove certain attributes.<br><br>

          *Supported JSON-PATCH operations*<br>
          - add (sets or replaces an attribute)<br>
          - remove (unsets an attribute)<br><br>

          *Attribute paths that allow updates via PATCH* ( **¹** supports *add* only)<br>
                - /productNumber¹<br>
                - /name<br>
                - /shortDescription<br>
                - /description<br>
                - /energyLabelsString<br>
                - /manufacturer<br>
                - /upc<br>
                - /ean<br>
                - /essentialFeatures<br>
                - /searchKeywords<br>
                - /priceInfo/price/amount<br>
                - /priceInfo/manufacturerPrice/amount<br>
                - /priceInfo/ecoParticipationPrice/amount<br>
                - /priceInfo/depositPrice/amount<br>
                - /productImage¹<br><br>

    securedBy: [products_write]
    is: [ locale, currency ]
    body:
      application/json:
        example: !include examples/patch_product_productid_request.json
    responses:
      200:
        body:
          application/json:
            example: !include examples/patch_product_productid_response.json
            schema: !include schema/patch_product_productid.schema.json
  delete:
    description: Deletes a single product.
    securedBy: [products_write]
    responses:
      204:

  /variations:
    displayName: Product variations
    get:
      is: [ locale, paged ]
      description: Returns links to product variations in a paged item list.<br/>
        "name" and "value" are used to find a matching variation for the user's selection.
        Note that the default resultsPerPage is 100 and max resultsPerPage is 1000 for this resource.
      securedBy: [products_read]
      responses:
        200:
          body:
            application/json:
              example: !include examples/get_product_productid_variations_response.json
              schema: !include schema/get_product_productid_variations.schema.json
  /slideshow:
    displayName: Product slideshow
    get:
      description: Returns links to slideshow images of a product.
      securedBy: [products_read]
      responses:
        200:
          body:
            application/json:
              example: !include examples/get_product_productid_slideshow_response.json
              schema: !include schema/get_product_productid_slideshow.schema.json
    post:
      description: Creates (uploads) an image for the product slideshow.
      securedBy: [products_write]
      body:
        multipart/form-data:
          formParameters:
            file:
              description: The image file to be uploaded. Specify the file name as part of the content header. An already existing image cannot be overwritten by a new image with the same file name. Either delete the old image and upload a new image or choose a different file name.
              required: true
              type: file
      responses:
        201:
          body:
            application/json:
              example: !include examples/post_product_productid_slideshow_response.json
              schema: !include schema/post_product_productid_slideshow.schema.json
        413:
          description: The file size is too large. The entire HTTP body (including multipart headers) must not exceed the defined limit.
    /{imageName}:
      displayName: Slideshow image
      delete:
        description: Deletes a single slideshow image.
        securedBy: [products_write]
        responses:
          204:
    /sequence:
      displayName: Product slideshow sequence
      get:
        description: Returns the names of the slideshow images as an array.
        securedBy: [products_read]
        responses:
          200:
            body:
              application/json:
                example: !include examples/get_product_productid_slideshow_sequence_response.json
                schema: !include schema/get_product_productid_slideshow_sequence_schema.json
      put:
        description: Updates the sequence of the slideshow images.
        securedBy: [products_write]
        body:
          application/json:
            example: !include examples/put_product_productid_slideshow_sequence_request.json
        responses:
          200:
            body:
              application/json:
                example: !include examples/put_product_productid_slideshow_sequence_response.json
                schema: !include schema/put_product_productid_slideshow_sequence_schema.json
  /custom-attributes:
    get:
      is: [ locale ]
      description: Returns values of user-defined product attributes.
      securedBy: [products_read]
      responses:
        200:
          body:
            application/json:
              example: !include examples/get_product_productid_custom_response.json
              schema: !include schema/get_product_productid_custom.schema.json
  /lowest-price:
    displayName: Product's lowest price
    get:
      is: [ locale, currency ]
      description: Returns the lowest price of all variations of a product that
        can currently be purchased.<br>
        Returns 404 Not Found if the product does not have any variation
        with an independent price, e.g. if all variations share the
        same price.
        Also depends on the shop setting to display "from" prices.
      securedBy: [products_read]
      responses:
        200:
          body:
            application/json:
              example: !include examples/get_product_productid_low_price_response.json
              schema: !include schema/get_product_productid_low_price.schema.json
  /categories:
    displayName: Product categories
    get:
      is: [ locale ]
      description: Returns a list of links, i.e. self, product and categories for a product.
      securedBy: [products_read]
      responses:
        200:
          body:
            application/json:
              example: !include examples/get_product_productid_categories_response.json
              schema: !include schema/get_product_productid_categories.schema.json
  /stock-level:
    displayName: Product stock level
    get:
      description: Returns the current stock level of a product.
      securedBy: [products_read]
      responses:
        200:
          body:
            application/json:
              example: !include examples/get_product_productid_stocklevel_response.json
              schema: !include schema/get_product_productid_stocklevel.schema.json
    put:
      description: Modifies the current stock level of a product.
      securedBy: [products_write]
      body:
        application/json:
          example: !include examples/put_product_productid_stocklevel_request.json
      responses:
        200:
          body:
            application/json:
              example: !include examples/put_product_productid_stocklevel_response.json
              schema: !include schema/put_product_productid_stocklevel.schema.json
